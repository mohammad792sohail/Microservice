package com.example.rest.webservices.restfl_web_services.user;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.rest.webservices.restfl_web_services.repository.UserRepository;

import jakarta.validation.Valid;

@RestController
public class UserController {
	@Autowired
	 private UserDaoService userDaoservice;
	
	@GetMapping(path="/users")
	public List getallusers() {
		return userDaoservice.gettingallUsers();
		
	}
	//normal way of fetching the user by id
	
	@GetMapping(path="/users/{id}")
	public User gettinguser(@PathVariable int id) {
		User user=userDaoservice.getUser(id);
		List<User> alusers=userDaoservice.gettingallUsers();
		if(!alusers.contains(user)) {
			throw new NotFoundUserException("not found user holding this id :"+id);
		}
		return user;
	}
	
	
	@PostMapping(path="/users")
	public ResponseEntity<User> createUser(@Valid @RequestBody User user) {
	User saveduser= userDaoservice.save(user);
		return ResponseEntity.ok(saveduser);
				
	}
	//@Valid annotation is used to trigger validation on the User
	
	
	@DeleteMapping(path="/users/delete{id}")
	public void deletingguser(@PathVariable int id) {
		userDaoservice.deleteUser(id);
		
	}
}
